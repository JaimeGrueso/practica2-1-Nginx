{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"practica2-1/","title":"Practica 2.1: Instalaci\u00f3n y Configuraci\u00f3n de Servidor Web Nginx","text":""},{"location":"practica2-1/#jaime-grueso-martin","title":"Jaime Grueso Martin","text":""},{"location":"practica2-1/#indice","title":"Indice","text":"<ol> <li>Instalaci\u00f3n Servidor Web Nginx</li> <li>Creaci\u00f3n de la Carpeta del Sitio Web</li> <li>Configuraci\u00f3n de Servidor Web NGINX</li> <li>Comprobaciones</li> <li>FTP</li> <li>HTTPS</li> </ol>"},{"location":"practica2-1/#instalacion-servidor-web-nginx","title":"Instalaci\u00f3n Servidor Web Nginx","text":"<p>En esta pr\u00e1ctica de proceder\u00e1 a instalar Nginx en Debian 12. Para ello el primer paso a seguir es la instalaci\u00f3n. Para ello se ejecutar\u00e1n los siguintes comandos:</p> <p></p> <p></p> <p>Hecho esto se verificar\u00e1 que la instalaci\u00f3n ha tenido \u00e9xito ejecutando el siguiente comando:</p> <p></p>"},{"location":"practica2-1/#creacion-de-la-carpeta-del-sitio-web","title":"Creaci\u00f3n de la Carpeta del Sitio Web","text":"<p>Una vez instalado el sevidor, se proceder\u00e1 a la creaci\u00f3n de la carpeta que albergar\u00e1 el sitio web (normalmente se utiliza /var/www). Se ejecutar\u00e1 el siguiente comando:</p> <p></p> <p>Dentro de la carpeta <code>html</code> se debe clonar el siguiente repositorio: \u00b4https://github.com/cloudacademy/static-website-example.git\u00b4. Para ello se inicializar\u00e1 un repositorio en dicha carpeta: </p> <p>Se usar\u00e1 la orden sudo git clone para evitar problemas con los permisos del directorio.</p> <p></p> <p>Y para asegurarse de no tener problemas a la hora de poner en marcha el servidor, se  har\u00e1 propietario al usuario <code>www-data</code>.</p> <p></p> <p>En complemento al paso anterior, se le dar\u00e1n permisos para poder entrar sin problemas a la web:</p> <p></p> <p>Se comprobar\u00e1 que la configuraci\u00f3n accediendo al siguiente enlace: <code>http://IP-maq-virtual</code></p> <p>Si todo ha ido bien, deber\u00e1 aparecer esto cuando accedamos a la url:</p> <p></p>"},{"location":"practica2-1/#configuracion-de-servidor-web-nginx","title":"Configuraci\u00f3n de servidor web NGINX","text":"<p>En Nginx hay dos rutas diferenciadas, <code>sites-available</code> y <code>sites-enabled</code>. La primera son archivos de los hosts, las webs que alberga el servidor. La otra son archivos de configuracion de los sitios que estan funcionando.</p> <p>En <code>sites-available</code> hay un archivo de configuraci\u00f3n por defecto (default), que es la que nos ha aparecido en el apartado anterior.</p> <p>Para que Nginx presente el contenido de nuestra web, es necesario crear un bloque de servidor con las directivas correctas. En vez de modificar el archivo de configuraci\u00f3n predeterminado directamente, crearemos uno nuevo en <code>/etc/nginx/sites-available/nombre_web</code>:</p> <p></p> <p>Y en el archivo creado se escribir\u00e1 el siguiente c\u00f3digo:</p> <p></p> <p>Despu\u00e9s de guardar el archivo de configuraci\u00f3n, se crear\u00e1 un enlace simb\u00f3lico en el directorio <code>sites-enabled</code> para que Nginx cargue tu configuraci\u00f3n.</p> <p></p> <p>Se reiniciar\u00e1 para aplicar todos los cambios.</p> <p></p> <p>Se podr\u00e1 realizar una comprobaci\u00f3n para asegurarse de que todo lo hecho anteriormente es correcto:</p> <p></p>"},{"location":"practica2-1/#comprobaciones","title":"Comprobaciones","text":""},{"location":"practica2-1/#comprobacion-del-correcto-funcionamiento","title":"Comprobaci\u00f3n del correcto funcionamiento","text":"<p>Al no poseer un servidor DNS, se har\u00e1 el proceso manualmente.</p> <p>Primeramente se editar\u00e1 el fichero <code>C:\\Windows\\System32\\drivers\\etc\\hosts</code>  para que asocie la IP de la m\u00e1quina virtual nmbre de nuestro servidor.</p> <p>Debian =&gt; <code>ip a</code></p> <p></p> <p></p>"},{"location":"practica2-1/#comprobar-registros-de-servidor","title":"Comprobar Registros de Servidor","text":"<p>Se comprobar\u00e1 que todo lo que suceda en el servidor, se registre en los archivos de logs.</p> <p><code>/var/log/nginx/access.log</code>: se registrar\u00e1n las solicitudes al servidor</p> <p></p> <p><code>/var/log/nginx/error.log</code>: cualquier error se mostrar\u00e1 en este archivo.</p> <p></p>"},{"location":"practica2-1/#ftp","title":"FTP","text":"<p>Si se desea alojar varios dominios o sitios web en el mismo servidor Nginx (es decir, todos compartir\u00e1n la misma direcci\u00f3n IP), se necesitar\u00e1 repetir el proceso mencionado anteriormente para cada nuevo dominio que se desee configurar.</p>"},{"location":"practica2-1/#como-transferir-archivos-desde-nuestra-maquina-localanfitrion-a-nuestra-maquina-virtual-debianservidor-remoto","title":"\u00bfC\u00f3mo transferir archivos desde nuestra m\u00e1quina local/anfitri\u00f3n a nuestra m\u00e1quina virtual Debian/servidor remoto?","text":"<p>FTP (File Transfer Protocol) es un protocolo utilizado para la transferencia de archivos entre dispositivos conectados a una red TCP. Como su nombre lo indica, permite mover archivos directamente de un equipo a otro.</p> <p>El problema con el FTP original es que es un protocolo inseguro, ya que los datos se transmiten sin cifrar. Esto se solucion\u00f3 con el desarrollo de SFTP, que agrega una capa de seguridad SSH para proteger la transferencia de archivos.</p> <p>SFTP (SSH File Transfer Protocol) es una versi\u00f3n mejorada del FTP, ya que utiliza un canal seguro basado en SSH.</p> <p>La principal ventaja de SFTP radica en la seguridad que ofrece durante la transferencia de archivos. Sin esta protecci\u00f3n, los datos se transmiten sin cifrar, lo que significa que cualquiera puede acceder a la informacion.</p>"},{"location":"practica2-1/#configurar-servidor-sftp-en-debian","title":"Configurar servidor SFTP en Debian","text":"<p>El primer paso es instalar el  SFTP </p> <p>A continuaci\u00f3n se crear\u00e1 un directorio llamada FTP: </p> <p>En la configuraci\u00f3n de vsftpd se indicar\u00e1 que este ser\u00e1 el directorio al que se cambie despu\u00e9s de conectarse el usuario.</p> <p>Ahora se crear\u00e1n los certificados de seguridad para cifrar la conexi\u00f3n </p> <p>Hecho esto, se prodr\u00e1 realizar la configuraci\u00f3n de vsftpd. Para ello se ber\u00e1 editar el archivo <code>sudo nano /etc/vsftpd.conf</code></p> <p>Primero, se deber\u00e1n eliminar las siguientes l\u00edneas, que aparecen al final del documento. </p> <p>Y se a\u00f1adir\u00e1n estas en su lugar </p> <p>Finalmente, se reiniciar\u00e1 el servidor para aplicar los cambios. </p> <p>Una vez finalizada la configuraci\u00f3n previa, se podr\u00e1 acceder al servidor mediante un cliente FTP (Filezilla) Tras la descarga, se introducir\u00e1n los datos necesarios para realizar la conexion al servidor FTP en Debian:</p> <p></p> <p>Se rellenar\u00e1n los campos que aparecen en la imagen y se har\u00e1 click en \"Conexion r\u00e1pida\"</p> <p>Aparecer\u00e1 un aviso y le damos a aceptar: </p> <p>Con esto, se establecer\u00e1 una conexion con la carpeta indicada en el archivo de configuraci\u00f3n</p> <p>Para comprobar que funciona correctamente, se transferir\u00e1 un fichero de una m\u00e1quina a otra. </p> <p>Es recomendable que el puerto sea el 22 ya que se utiliza el protocolo SFTP ya que cifran mediante SSH los datos, a diferencia del puerto 21 que se quedan sin cifrar pero con los certificados se cifra la informaci\u00f3n.</p>"},{"location":"practica2-1/#https","title":"HTTPS","text":"<p>Se har\u00e1 que todos nuestros sitios web utilicen certificados SSL y se acceda a ellos por medio de HTTPS. Se generar\u00e1n unos  certificados autofirmados y habr\u00e1 que modificar el fichero de configuraci\u00f3n de los hosts virtuales con los par\u00e1metros necesarios.</p>"},{"location":"practica2-1/#redireccion-http-a-https","title":"Redirecci\u00f3n HTTP a HTTPS","text":"<p>Cuando el usuario acceda al sitio web mediante HTTP, se le redirijir\u00e1 a HTTPS, en el puerto 443.</p> <p>Para empezar, se deber\u00e1 instalar OpenSSL, una herramienta que te permitir\u00e1 crear certificados sin necesidad de una autoridad certificadora. Se generar\u00e1 una clave privada y un certificado autofirmado. </p> <p>Se editar\u00e1 el archivo de configuraci\u00f3n de Nginx. </p> <p>Y se modificar\u00e1 de la siguiente manera </p> <p>Hecho esto, habr\u00e1 que mofificar el archivo <code>hosts</code> de nuestra m\u00e1quina f\u00edsica. </p> <p>Si todo ha ido bien al colocar en cualquier buscador <code>http://www.jaimegmweb.com</code>, se cambiar\u00e1 a <code>https</code> y se mostrar\u00e1 un mensaje de alerta. Esto es debido a que el certificado es autofirmado y  aparecer\u00e1 que el sitio no es seguro. </p> <p>Se obviar\u00e1 este aviso y se proceder\u00e1 a visualizar el contenido de la web: </p> <p>En una situacion real, se deber\u00e1 hacer uso de un certificado firmado v\u00e1lido como los generados por Certbot.</p>"}]}